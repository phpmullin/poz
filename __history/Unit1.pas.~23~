unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, sLabel, Vcl.StdCtrls, sMemo, Vcl.Mask,
  sMaskEdit, sEdit, Vcl.DBCtrls, sDBComboBox, sCustomComboEdit, sToolEdit,
  sSpinEdit, sButton, sGroupBox, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Comp.DataSet, sDBLookupComboBox,
  FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxContainer, cxEdit, dxSkinsCore,
  dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee,
  dxSkinDarkRoom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, cxTextEdit, cxMaskEdit, cxDropDownEdit, cxLookupEdit,
  cxDBLookupEdit, cxDBLookupComboBox;



type
  TAddUser = class(TForm)
    sMemo1: TsMemo;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    sLabelFX1: TsLabelFX;
    sDateEdit1: TsDateEdit;
    Label7: TLabel;
    sTimePicker1: TsTimePicker;
    sGroupBox1: TsGroupBox;
    Fam: TsEdit;
    sMaskEdit1: TsMaskEdit;
    Label1: TLabel;
    Name1: TsEdit;
    Otch: TsEdit;
    Label5: TLabel;
    sLabel1: TsLabel;
    Label6: TLabel;
    sRadioGroup1: TsRadioGroup;
    sButton1: TsButton;
    Save_button: TsButton;
    sButton3: TsButton;
    Label8: TLabel;
    Label9: TLabel;
    Query: TFDQuery;
    reklama: TcxLookupComboBox;
    Manager: TcxLookupComboBox;
    Usluga: TcxLookupComboBox;
    email: TsEdit;
    Label10: TLabel;
    procedure sButton3Click(Sender: TObject);
    procedure sButton1Click(Sender: TObject);
    procedure sMaskEdit1ValidateError(Sender: TObject; Text: string);
    procedure Save_buttonClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  AddUser: TAddUser;

implementation

{$R *.dfm}

uses Server, Unit2, Unit3;



procedure TAddUser.sButton1Click(Sender: TObject);
begin
Save_button.Click;
Close;
end;

procedure TAddUser.Save_buttonClick(Sender: TObject);
begin
with Query do
begin
if Usluga.EditValue=null then Usluga.EditValue:=0;
if reklama.EditValue=null then reklama.EditValue:=0;
if Manager.EditValue=null then Manager.EditValue:=0;
query.Close;
query.sql.clear;
query.sql.text:='insert INTO Pozvonochnik (Time,	date,	UslugaID,	vid_reklamiID,	Fam,	Name,	Otch,	tel,	email, PolID,	ManagerID,	Kommentariy) values(:t,:d,:u,:v,:f,:n,:o,:tt,e,:p,:m,:k)';
query.params[0].asString:=sTimePicker1.Text;
query.params[1].asDateTime:=sDateEdit1.Date;
query.params[2].asinteger:=Usluga.EditValue;
query.params[3].AsInteger:=reklama.EditValue;
query.params[4].asString:=Fam.text;
query.params[5].asString:=Name1.text;
query.params[6].asString:=Otch.text;
query.params[7].asString:=sMaskEdit1.text;
query.params[7].asString:=email.text;
query.params[8].AsInteger:=sRadioGroup1.ItemIndex;
query.params[9].AsInteger:=Manager.EditValue;
query.params[10].asString:=sMemo1.Text;
query.OpenOrExecute;
query.Close;
module.Pozvonochnik.Refresh;

end;
end;

procedure TAddUser.sButton3Click(Sender: TObject);
begin
Close;
end;

procedure TAddUser.sMaskEdit1ValidateError(Sender: TObject; Text: string);
begin
try
    ShowMessage('х*ли весь телефон не ввел?');
except

end;
end;

end.
